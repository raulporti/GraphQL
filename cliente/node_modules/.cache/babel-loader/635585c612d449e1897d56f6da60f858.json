{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\GraphQLServer\\\\cliente\\\\src\\\\componentes\\\\Pedidos\\\\Pedido.js\";\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { OBTENER_PRODUCTO } from '../../queries';\nimport ResumenProducto from './ResumenProducto';\nimport { ACTUALIZAR_ESTADO } from '../../mutations';\n\nconst Pedido = props => {\n  const {\n    pedido\n  } = props;\n  const fecha = new Date(Number(pedido.fecha));\n  const {\n    id,\n    total\n  } = pedido;\n  return React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `card mb-3`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-text font-weight-bold \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Estado:\", React.createElement(\"select\", {\n    className: \"form-control my-3\",\n    defaultValue: pedido.estado,\n    onChange: e => {\n      const input = {\n        id,\n        pedido: pedido.pedido,\n        fecha: pedido.fecha,\n        total,\n        cliente: props.cliente,\n        estado: e.target.value\n      };\n      console.log(input);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"PENDIENTE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"PENDIENTE\"), React.createElement(\"option\", {\n    value: \"COMPLETADO\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"COMPLETADO\"), React.createElement(\"option\", {\n    value: \"CANCELADO\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"CANCELADO\"))), React.createElement(\"p\", {\n    className: \"card-text font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Pedido ID:\\xA0\", React.createElement(\"span\", {\n    className: \"font-weight-normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" \", pedido.id)), React.createElement(\"p\", {\n    className: \"card-text font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Fecha Pedido:\\xA0\", React.createElement(\"span\", {\n    className: \"font-weight-normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, fecha.toLocaleString(\"es-GT\"))), React.createElement(\"p\", {\n    className: \"card-text font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Total:\\xA0\", React.createElement(\"span\", {\n    className: \"font-weight-normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"$\", pedido.total)), React.createElement(\"h3\", {\n    className: \"card-text text-center mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Art\\xEDculos del pedido\"), pedido.pedido.map((producto, index) => {\n    const {\n      id\n    } = producto;\n    return React.createElement(Query, {\n      key: pedido.id + index,\n      query: OBTENER_PRODUCTO,\n      variables: {\n        id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data,\n      refetch\n    }) => {\n      if (loading) return \"Cargando...\";\n      if (error) return `Error ${error.message}`;\n      return React.createElement(ResumenProducto, {\n        producto: data.obtenerProducto,\n        cantidad: producto.cantidad,\n        id: producto.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    });\n  }))));\n};\n\nexport default Pedido;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/GraphQLServer/cliente/src/componentes/Pedidos/Pedido.js"],"names":["React","Query","Mutation","OBTENER_PRODUCTO","ResumenProducto","ACTUALIZAR_ESTADO","Pedido","props","pedido","fecha","Date","Number","id","total","estado","e","input","cliente","target","value","console","log","toLocaleString","map","producto","index","loading","error","data","refetch","message","obtenerProducto","cantidad"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Query, Mutation} from 'react-apollo';\r\nimport {OBTENER_PRODUCTO} from '../../queries';\r\nimport ResumenProducto from './ResumenProducto';\r\nimport {ACTUALIZAR_ESTADO} from '../../mutations';\r\nconst Pedido = (props) => {\r\n    const {pedido} = props;\r\n    const fecha = new Date(Number(pedido.fecha));\r\n    const {id, total} = pedido;\r\n    return ( \r\n        <div className=\"col-md-4\">\r\n            <div className={`card mb-3`} >\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text font-weight-bold \">Estado:\r\n                            <select className=\"form-control my-3\"\r\n                                    defaultValue={pedido.estado}\r\n                                    onChange={e =>{\r\n                                        const input = {\r\n                                            id,\r\n                                            pedido: pedido.pedido,\r\n                                            fecha: pedido.fecha,\r\n                                            total, \r\n                                            cliente: props.cliente,\r\n                                            estado: e.target.value\r\n                                        }\r\n                                        console.log(input);\r\n                                    }}>\r\n                                    <option value=\"PENDIENTE\">PENDIENTE</option>\r\n                                    <option value=\"COMPLETADO\">COMPLETADO</option>\r\n                                    <option value=\"CANCELADO\">CANCELADO</option>\r\n                            </select>\r\n                    </p> \r\n                    <p className=\"card-text font-weight-bold\">Pedido ID:&nbsp;\r\n                        <span className=\"font-weight-normal\"> {pedido.id}</span>\r\n                    </p> \r\n                    <p className=\"card-text font-weight-bold\">Fecha Pedido:&nbsp;  \r\n                        <span className=\"font-weight-normal\">\r\n                            {fecha.toLocaleString(\"es-GT\")}\r\n                        </span>\r\n                    </p>\r\n                    <p className=\"card-text font-weight-bold\">Total:&nbsp;  \r\n                         <span className=\"font-weight-normal\"> \r\n                                ${pedido.total}\r\n                        </span>\r\n                    </p>                    \r\n                    <h3 className=\"card-text text-center mb-3\">Artículos del pedido</h3>\r\n                    {pedido.pedido.map((producto, index) =>{\r\n                        const {id} = producto;\r\n                        return(\r\n                            <Query key={pedido.id+index} query={OBTENER_PRODUCTO} \r\n                        variables={{id}}>\r\n                     {({loading, error, data, refetch}) =>{\r\n                         if(loading) return \"Cargando...\";\r\n                         if(error) return `Error ${error.message}`;\r\n                        return(  \r\n                              <ResumenProducto   \r\n                             producto={data.obtenerProducto} \r\n                             cantidad={producto.cantidad}\r\n                             id={producto.id}     \r\n                             />\r\n                                 \r\n                         )\r\n                     }}       \r\n                </Query>\r\n                        );\r\n                    })}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Pedido;\r\n"]},"metadata":{},"sourceType":"module"}