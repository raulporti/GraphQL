{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\GraphQLServer\\\\cliente\\\\src\\\\componentes\\\\Pedidos\\\\ContenidoPedido.js\";\nimport React, { Component, Fragment } from 'react';\nimport Select from 'react-select';\nimport Animated from 'react-select/animated';\nimport Resumen from './Resumen';\n\nclass ContenidoPedido extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productos: [],\n      total: 0\n    };\n\n    this.seleccionarProducto = productos => {\n      this.setState({\n        productos\n      });\n    };\n\n    this.actualizarCantidad = (cantidad, index) => {\n      //console.log(cantidad);\n      let nuevoTotal = 0; //Leer el state de productos\n\n      const productos = this.state.productos;\n\n      if (productos.length === 0) {\n        this.setState({\n          total: nuevoTotal\n        });\n        return;\n      } //Agregar la cantidad desde la interfaz\n\n\n      productos[index].cantidad = Number(cantidad);\n      productos.map(producto => nuevoTotal += producto.cantidad * producto.precio); //Actualizar la cantidad de los productos\n      //Validamos\n      //Agregar al state\n\n      this.setState({\n        productos,\n        total: nuevoTotal\n      });\n    };\n\n    this.eliminarProducto = id => {\n      const productos = this.state.productos;\n      const productoRestante = productos.filter(producto => producto.id !== id);\n      this.setState({\n        productos: productoRestante\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Seleccionar Articulos\"), React.createElement(Select, {\n      options: this.props.productos,\n      onChange: this.seleccionarProducto,\n      isMulti: true,\n      components: Animated(),\n      placeholder: \"Seleccionar Productos\",\n      getOptionValue: options => options.id,\n      getOptionLabel: options => options.nombre,\n      value: this.state.productos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Resumen, {\n      productos: this.state.productos,\n      actualizarCantidad: this.actualizarCantidad,\n      eliminarProducto: this.eliminarProducto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"font-weight-bold float-right mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Total:\", React.createElement(\"span\", {\n      className: \"font-wight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"$ \", this.state.total)));\n  }\n\n}\n\nexport default ContenidoPedido;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/GraphQLServer/cliente/src/componentes/Pedidos/ContenidoPedido.js"],"names":["React","Component","Fragment","Select","Animated","Resumen","ContenidoPedido","state","productos","total","seleccionarProducto","setState","actualizarCantidad","cantidad","index","nuevoTotal","length","Number","map","producto","precio","eliminarProducto","id","productoRestante","filter","render","props","options","nombre"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport Animated from 'react-select/animated';\r\nimport Resumen from './Resumen';\r\nclass ContenidoPedido extends Component {\r\n    state = { \r\n        productos: [],\r\n        total: 0\r\n     }\r\n\r\n    seleccionarProducto = (productos)=>{\r\n        this.setState({\r\n         productos   \r\n        })\r\n    }\r\n\r\n    actualizarCantidad = (cantidad, index) => {\r\n        //console.log(cantidad);\r\n        let nuevoTotal = 0;\r\n        //Leer el state de productos\r\n        const productos = this.state.productos;\r\n        if(productos.length === 0){\r\n            this.setState({\r\n                total: nuevoTotal\r\n            });\r\n            return;\r\n        }\r\n        //Agregar la cantidad desde la interfaz\r\n        productos[index].cantidad = Number(cantidad);\r\n        productos.map(producto => nuevoTotal += (producto.cantidad * producto.precio));\r\n        //Actualizar la cantidad de los productos\r\n\r\n        //Validamos\r\n\r\n        //Agregar al state\r\n        this.setState({\r\n            productos,\r\n            total: nuevoTotal\r\n        })\r\n    }\r\n\r\n    eliminarProducto = (id) => {\r\n        const productos = this.state.productos;\r\n        const productoRestante = productos.filter(producto => producto.id !== id);\r\n        \r\n        this.setState({\r\n            productos: productoRestante\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <Fragment>\r\n            <h2 className=\"text-center mb-5\">Seleccionar Articulos</h2>\r\n            <Select options={this.props.productos}\r\n            onChange={this.seleccionarProducto}\r\n            isMulti={true}\r\n            components={Animated()} \r\n            placeholder=\"Seleccionar Productos\"\r\n            getOptionValue={(options)=>options.id}\r\n            getOptionLabel={(options)=>options.nombre}\r\n            value={this.state.productos}/>\r\n            <Resumen\r\n              productos = {this.state.productos}  \r\n              actualizarCantidad = {this.actualizarCantidad}\r\n              eliminarProducto = {this.eliminarProducto}\r\n            />\r\n            <p className=\"font-weight-bold float-right mt-4\">\r\n                Total:\r\n                <span className=\"font-wight-normal\">\r\n                    $ {this.state.total}\r\n                </span>\r\n            </p>\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ContenidoPedido;"]},"metadata":{},"sourceType":"module"}