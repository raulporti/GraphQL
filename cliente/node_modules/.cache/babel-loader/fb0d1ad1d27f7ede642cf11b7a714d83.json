{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Raul\\\\Desktop\\\\GraphQL\\\\cliente\\\\src\\\\componentes\\\\Panel\\\\Vendedores.js\";\nimport React, { Fragment } from 'react';\nimport { Query } from 'react-apollo';\nimport { TOP_VENDEDORES } from '../../queries';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst Vendedores = () => {\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Top 10 de Vendedores\"), React.createElement(Query, {\n    query: TOP_VENDEDORES,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return 'Cargando...';\n    if (error) return `Error ${error.message}`;\n    console.log(data);\n    const topVendedoresGrafica = [];\n    data.topVendedores.map((ventas, index) => {\n      topVendedoresGrafica[index] = { ...ventas.vendedor[0],\n        total: ventas.total\n      };\n    });\n    return React.createElement(BarChart, {\n      width: 800,\n      height: 400,\n      data: topVendedoresGrafica,\n      margin: {\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(CartesianGrid, {\n      strokeDasharray: \"3 3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(XAxis, {\n      dataKey: \"nombre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      dataKey: \"total\",\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }));\n  }));\n};\n\nexport default Vendedores;","map":{"version":3,"sources":["D:/Users/Raul/Desktop/GraphQL/cliente/src/componentes/Panel/Vendedores.js"],"names":["React","Fragment","Query","TOP_VENDEDORES","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","Vendedores","loading","error","data","message","console","log","topVendedoresGrafica","topVendedores","map","ventas","index","vendedor","total","top","right","left","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,KAAR,QAAoB,cAApB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,QAAR,EAAkBC,GAAlB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,aAArC,EAAoDC,OAApD,EAA6DC,MAA7D,QAA0E,UAA1E;;AACA,MAAMC,UAAU,GAAG,MAAM;AACrB,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAER,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAACS,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAAD,KAA0B;AACvB,QAAGF,OAAH,EAAY,OAAO,aAAP;AACZ,QAAGC,KAAH,EAAU,OAAQ,SAAQA,KAAK,CAACE,OAAQ,EAA9B;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,oBAAoB,GAAG,EAA7B;AACAJ,IAAAA,IAAI,CAACK,aAAL,CAAmBC,GAAnB,CAAuB,CAACC,MAAD,EAASC,KAAT,KAAiB;AACpCJ,MAAAA,oBAAoB,CAACI,KAAD,CAApB,GAA6B,EACzB,GAAGD,MAAM,CAACE,QAAP,CAAgB,CAAhB,CADsB;AAEzBC,QAAAA,KAAK,EAAEH,MAAM,CAACG;AAFW,OAA7B;AAIH,KALD;AAMA,WACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,GAAjB;AAAsB,MAAA,MAAM,EAAE,GAA9B;AAAmC,MAAA,IAAI,EAAEN,oBAAzC;AACA,MAAA,MAAM,EAAE;AAACO,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE,EAAhB;AAAoBC,QAAAA,IAAI,EAAE,EAA1B;AAA8BC,QAAAA,MAAM,EAAE;AAAtC,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEL,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFK,EAGL,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHK,EAIL,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJK,EAKL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALK,EAML,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANK,EAOL,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPK,CADJ;AAWH,GAvBL,CAFJ,CADJ;AA+BH,CAhCD;;AAkCA,eAAejB,UAAf","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {Query} from 'react-apollo';\r\nimport {TOP_VENDEDORES} from '../../queries';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\r\nconst Vendedores = () => {\r\n    return ( \r\n        <Fragment>\r\n            <h1>Top 10 de Vendedores</h1>\r\n            <Query query={TOP_VENDEDORES}>\r\n                {({loading, error, data})=>{\r\n                    if(loading) return 'Cargando...';\r\n                    if(error) return `Error ${error.message}`;\r\n                    console.log(data);\r\n                    const topVendedoresGrafica = [];\r\n                    data.topVendedores.map((ventas, index)=>{\r\n                        topVendedoresGrafica[index]= {\r\n                            ...ventas.vendedor[0],\r\n                            total: ventas.total\r\n                        }\r\n                    })\r\n                    return(\r\n                        <BarChart width={800} height={400} data={topVendedoresGrafica}\r\n                        margin={{top: 5, right: 30, left: 20, bottom: 5}}>\r\n                   <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                   <XAxis dataKey=\"nombre\"/>\r\n                   <YAxis/>\r\n                   <Tooltip/>\r\n                   <Legend />\r\n                   <Bar dataKey=\"total\" fill=\"#8884d8\" />\r\n                  </BarChart>  \r\n                    )\r\n                }\r\n                }\r\n            </Query>\r\n            </Fragment>\r\n     );\r\n}\r\n \r\nexport default Vendedores;"]},"metadata":{},"sourceType":"module"}