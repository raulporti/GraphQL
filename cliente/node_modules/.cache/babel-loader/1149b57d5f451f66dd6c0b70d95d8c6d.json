{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\GraphQLServer\\\\cliente\\\\src\\\\componentes\\\\Productos\\\\FormularioEditarProducto.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Mutation } from 'react-apollo';\nimport { ACTUALIZAR_PRODUCTO } from '../../mutations';\nimport { withRouter } from 'react-router-dom';\nconst initialState = {\n  nombre: '',\n  precio: '',\n  stock: ''\n};\n\nclass FormularioEditar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = { ...this.props.producto.obtenerProducto\n    };\n\n    this.limpiarState = () => {\n      this.setState({ ...initialState\n      });\n    };\n\n    this.actualizarState = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.validarForm = () => {\n      const {\n        nombre,\n        precio,\n        stock\n      } = this.state;\n      const noValido = !nombre || !precio || !stock;\n      return noValido;\n    };\n\n    this.editarProductoForm = (e, actualizarProducto) => {\n      e.preventDefault();\n      actualizarProducto().then(data => {\n        this.setState({ ...initialState\n        });\n      });\n    };\n  }\n\n  render() {\n    const {\n      nombre,\n      precio,\n      stock\n    } = this.state;\n    const {\n      id\n    } = this.props;\n    const input = {\n      id,\n      nombre,\n      precio: Number(precio),\n      stock: Number(stock)\n    };\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Editar Producto\"), React.createElement(Mutation, {\n      mutation: ACTUALIZAR_PRODUCTO,\n      variables: {\n        input\n      },\n      key: id,\n      onCompleted: () => this.props.refetch().then(() => {\n        this.props.history.push('/productos');\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, (actualizarProducto, {\n      loading,\n      error,\n      data\n    }) => {\n      return React.createElement(\"form\", {\n        className: \"col-md-8\",\n        onSubmit: e => this.editarProductoForm(e, actualizarProducto),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Nombre:\"), React.createElement(\"input\", {\n        onChange: this.actualizarState,\n        type: \"text\",\n        name: \"nombre\",\n        className: \"form-control\",\n        placeholder: \"Nombre del Producto\",\n        value: nombre,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Precio:\"), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"$\")), React.createElement(\"input\", {\n        onChange: this.actualizarState,\n        type: \"number\",\n        name: \"precio\",\n        className: \"form-control\",\n        placeholder: \"Precio del Producto\",\n        value: precio,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Stock:\"), React.createElement(\"input\", {\n        onChange: this.actualizarState,\n        type: \"number\",\n        name: \"stock\",\n        className: \"form-control\",\n        placeholder: \"stock del Producto\",\n        value: stock,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        disabled: this.validarForm(),\n        type: \"submit\",\n        className: \"btn btn-success float-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Guardar Cambios\"));\n    }));\n  }\n\n}\n\nexport default withRouter(FormularioEditar);","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/GraphQLServer/cliente/src/componentes/Productos/FormularioEditarProducto.js"],"names":["React","Component","Fragment","Mutation","ACTUALIZAR_PRODUCTO","withRouter","initialState","nombre","precio","stock","FormularioEditar","state","props","producto","obtenerProducto","limpiarState","setState","actualizarState","e","name","value","target","validarForm","noValido","editarProductoForm","actualizarProducto","preventDefault","then","data","render","id","input","Number","refetch","history","push","loading","error"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Mutation } from 'react-apollo';\r\nimport {ACTUALIZAR_PRODUCTO} from '../../mutations';\r\nimport {withRouter} from 'react-router-dom';\r\nconst initialState = {\r\n    nombre: '',\r\n    precio: '',\r\n    stock: ''\r\n}\r\nclass FormularioEditar extends Component {\r\n    state = { \r\n        ...this.props.producto.obtenerProducto\r\n     }\r\n\r\n     limpiarState = () =>{\r\n        this.setState({\r\n         ...initialState    \r\n        })  \r\n      }\r\n     actualizarState = e => {\r\n     const {name, value} = e.target; \r\n     \r\n     this.setState({\r\n         [name]: value\r\n     })\r\n     }\r\n     \r\n     validarForm =() =>{\r\n         const{nombre, precio, stock} = this.state; \r\n \r\n         const noValido = !nombre || !precio || !stock;\r\n \r\n         return noValido;\r\n     }\r\n\r\n     editarProductoForm = (e, actualizarProducto) =>{\r\n         e.preventDefault();\r\n         actualizarProducto().then(data =>{\r\n             this.setState({\r\n                 ...initialState\r\n             })\r\n         })\r\n     }\r\n    render() { \r\n        const {nombre, precio, stock} = this.state;\r\n        const {id} = this.props;\r\n        const input = {\r\n            id,\r\n            nombre,\r\n            precio: Number(precio),\r\n            stock: Number(stock)\r\n        }\r\n        return ( \r\n            <Fragment>\r\n            <h1>Editar Producto</h1>\r\n            <Mutation mutation={ACTUALIZAR_PRODUCTO}\r\n                      variables={{input}}\r\n                      key={id}\r\n                      onCompleted={() => this.props.refetch().then(() =>{\r\n                          this.props.history.push('/productos')\r\n                      })}\r\n            >\r\n                {(actualizarProducto, {loading, error, data})=>{\r\n                    return(\r\n                        <form \r\n                        className=\"col-md-8\" \r\n                        onSubmit={e => this.editarProductoForm(e, actualizarProducto)}>\r\n                            <div className=\"form-group\">\r\n                                <label>Nombre:</label>\r\n                                <input \r\n                                    onChange={this.actualizarState}\r\n                                    type=\"text\"\r\n                                    name=\"nombre\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Nombre del Producto\"\r\n                                    value={nombre}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Precio:</label>\r\n                                <div className=\"input-group\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <div className=\"input-group-text\">$</div>\r\n                                    </div>\r\n                                    <input \r\n                                        onChange={this.actualizarState}\r\n                                        type=\"number\" \r\n                                        name=\"precio\" \r\n                                        className=\"form-control\" \r\n                                        placeholder=\"Precio del Producto\"\r\n                                        value={precio}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Stock:</label>\r\n                                <input \r\n                                    onChange={this.actualizarState}\r\n                                    type=\"number\" \r\n                                    name=\"stock\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"stock del Producto\" \r\n                                    value={stock}\r\n                                />\r\n                            </div>\r\n                            <button \r\n                                disabled={ this.validarForm() }\r\n                                type=\"submit\" \r\n                                className=\"btn btn-success float-right\">\r\n                                        Guardar Cambios\r\n                            </button>\r\n                        </form>   \r\n                    )\r\n                }}\r\n            </Mutation>\r\n            \r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(FormularioEditar);"]},"metadata":{},"sourceType":"module"}