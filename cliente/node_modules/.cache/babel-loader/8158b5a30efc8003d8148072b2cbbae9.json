{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\GraphQLServer\\\\cliente\\\\src\\\\componentes\\\\Pedidos\\\\ContenidoPedido.js\";\nimport React, { Component, Fragment } from 'react';\nimport Select from 'react-select';\nimport Animated from 'react-select/animated';\nimport Resumen from './Resumen';\nimport GenerarPedido from './GenerarPedido';\n\nclass ContenidoPedido extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productos: [],\n      total: 0\n    };\n\n    this.seleccionarProducto = productos => {\n      this.setState({\n        productos\n      });\n    };\n\n    this.actualizarTotal = () => {\n      let nuevoTotal = 0;\n      const productos = this.state.productos;\n\n      if (productos.length === 0) {\n        this.setState({\n          total: nuevoTotal\n        });\n        return;\n      }\n\n      productos.map(producto => nuevoTotal += producto.cantidad * producto.precio);\n      this.setState({\n        total: nuevoTotal\n      });\n    };\n\n    this.actualizarCantidad = (cantidad, index) => {\n      const productos = this.state.productos;\n      productos[index].cantidad = Number(cantidad);\n      this.setState({\n        productos\n      }, () => {\n        this.actualizarTotal();\n      });\n    };\n\n    this.eliminarProducto = id => {\n      const productos = this.state.productos;\n      const productoRestante = productos.filter(producto => producto.id !== id);\n      this.setState({\n        productos: productoRestante\n      }, () => {\n        this.actualizarTotal();\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"text-center mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Seleccionar Articulos\"), React.createElement(Select, {\n      options: this.props.productos,\n      onChange: this.seleccionarProducto,\n      isMulti: true,\n      components: Animated(),\n      placeholder: \"Seleccionar Productos\",\n      getOptionValue: options => options.id,\n      getOptionLabel: options => options.nombre,\n      value: this.state.productos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Resumen, {\n      productos: this.state.productos,\n      actualizarCantidad: this.actualizarCantidad,\n      eliminarProducto: this.eliminarProducto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"font-weight-bold float-right mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Total:\", React.createElement(\"span\", {\n      className: \"font-wight-normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"$ \", this.state.total)), React.createElement(GenerarPedido, {\n      productos: this.state.productos,\n      total: this.state.total,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ContenidoPedido;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/GraphQLServer/cliente/src/componentes/Pedidos/ContenidoPedido.js"],"names":["React","Component","Fragment","Select","Animated","Resumen","GenerarPedido","ContenidoPedido","state","productos","total","seleccionarProducto","setState","actualizarTotal","nuevoTotal","length","map","producto","cantidad","precio","actualizarCantidad","index","Number","eliminarProducto","id","productoRestante","filter","render","props","options","nombre"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport Select from 'react-select';\r\nimport Animated from 'react-select/animated';\r\nimport Resumen from './Resumen';\r\nimport GenerarPedido from './GenerarPedido';\r\nclass ContenidoPedido extends Component {\r\n    state = { \r\n        productos: [],\r\n        total: 0\r\n     }\r\n\r\n    seleccionarProducto = (productos)=>{\r\n        this.setState({\r\n         productos   \r\n        })\r\n    }\r\n    actualizarTotal =() =>{\r\n        let nuevoTotal = 0;\r\n        const productos = this.state.productos;\r\n        if(productos.length === 0){\r\n            this.setState({\r\n                total: nuevoTotal\r\n            });\r\n            return;\r\n        }\r\n        \r\n       \r\n        productos.map(producto => nuevoTotal += (producto.cantidad * producto.precio));\r\n        this.setState({\r\n            total: nuevoTotal\r\n        });\r\n       \r\n    }\r\n    actualizarCantidad = (cantidad, index) => {\r\n        const productos = this.state.productos;\r\n        productos[index].cantidad = Number(cantidad);\r\n        this.setState({\r\n            productos\r\n        },() =>{\r\n            this.actualizarTotal();\r\n        })\r\n    }\r\n\r\n    eliminarProducto = (id) => {\r\n        const productos = this.state.productos;\r\n        const productoRestante = productos.filter(producto => producto.id !== id);\r\n        \r\n        this.setState({\r\n            productos: productoRestante\r\n        },() =>{\r\n            this.actualizarTotal();\r\n        })\r\n    }\r\n    render() { \r\n        return ( \r\n            <Fragment>\r\n            <h2 className=\"text-center mb-5\">Seleccionar Articulos</h2>\r\n            <Select options={this.props.productos}\r\n            onChange={this.seleccionarProducto}\r\n            isMulti={true}\r\n            components={Animated()} \r\n            placeholder=\"Seleccionar Productos\"\r\n            getOptionValue={(options)=>options.id}\r\n            getOptionLabel={(options)=>options.nombre}\r\n            value={this.state.productos}/>\r\n            <Resumen\r\n              productos = {this.state.productos}  \r\n              actualizarCantidad = {this.actualizarCantidad}\r\n              eliminarProducto = {this.eliminarProducto}\r\n            />\r\n            <p className=\"font-weight-bold float-right mt-4\">\r\n                Total:\r\n                <span className=\"font-wight-normal\">\r\n                    $ {this.state.total}\r\n                </span>\r\n            </p>\r\n            <GenerarPedido\r\n                productos = {this.state.productos}\r\n                total = {this.state.total}\r\n            />\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ContenidoPedido;"]},"metadata":{},"sourceType":"module"}