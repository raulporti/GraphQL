{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\GraphQLServer\\\\cliente\\\\src\\\\componentes\\\\Productos\\\\Productos.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Query, Mutation } from \"react-apollo\";\nimport { OBTENER_PRODUCTOS } from \"../../queries\";\nimport { ELIMINAR_PRODUCTO } from \"../../mutations\";\nimport { Link } from \"react-router-dom\";\nimport Exito from '../Alertas/Exito';\nimport Paginador from '../Paginador';\n\nclass Productos extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      alerta: {\n        mostrar: false,\n        mensaje: ''\n      },\n      paginador: {\n        offset: 0,\n        actual: 1,\n        limite: 2\n      }\n    };\n\n    this.paginaAnterior = () => {\n      this.setState({\n        paginador: { ...this.state.paginador,\n          offset: this.state.paginador.offset - this.state.paginador.limite,\n          actual: this.state.paginador.actual - 1\n        }\n      });\n    };\n\n    this.paginaSiguiente = () => {\n      this.setState({\n        paginador: { ...this.state.paginador,\n          offset: this.state.paginador.offset + this.state.paginador.limite,\n          actual: this.state.paginador.actual + 1\n        }\n      });\n    };\n  }\n\n  render() {\n    const {\n      alerta: {\n        mostrar,\n        mensaje\n      }\n    } = this.state;\n    const alerta = mostrar ? React.createElement(Exito, {\n      mensaje: mensaje,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }) : '';\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Productos\"), alerta, React.createElement(Query, {\n      query: OBTENER_PRODUCTOS,\n      pollInterval: 1000,\n      variables: {\n        limite: this.state.paginador.limite,\n        offset: this.state.paginador.offset\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data,\n      startPolling,\n      stopPolling\n    }) => {\n      if (loading) return \"Cargando...\";\n      if (error) return `Error: ${error.message}`;\n      console.log(data);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        className: \"table-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Nombre\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Precio\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Stock\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Eliminar\"), React.createElement(\"th\", {\n        scope: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Editar\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, data.obtenerProductos.map(item => {\n        const {\n          id\n        } = item;\n        return React.createElement(\"tr\", {\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, item.nombre), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, item.precio), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, item.stock), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(Mutation, {\n          mutation: ELIMINAR_PRODUCTO,\n          onCompleted: data => {\n            this.setState({\n              alerta: {\n                mostrar: true,\n                mensaje: data.eliminarProducto\n              }\n            }, () => {\n              setTimeout(() => {\n                this.setState({\n                  alerta: {\n                    mostrar: false,\n                    mensaje: ''\n                  }\n                });\n              }, 3000);\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, eliminarProducto => React.createElement(\"button\", {\n          onClick: () => {\n            eliminarProducto({\n              variables: {\n                id\n              }\n            });\n          },\n          type: \"button\",\n          className: \"btn btn-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"\\xD7 Eliminar\"))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: `/productos/editar/${id}`,\n          className: \"btn btn-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Editar Producto\")));\n      }))), React.createElement(Paginador, {\n        actual: this.state.paginador.actual,\n        totalClientes: data.totalClientes,\n        limite: this.state.paginador.limite,\n        paginaAnterior: this.paginaAnterior,\n        paginaSiguiente: this.paginaSiguiente,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }));\n    }));\n  }\n\n}\n\nexport default Productos;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/GraphQLServer/cliente/src/componentes/Productos/Productos.js"],"names":["React","Component","Fragment","Query","Mutation","OBTENER_PRODUCTOS","ELIMINAR_PRODUCTO","Link","Exito","Paginador","Productos","state","alerta","mostrar","mensaje","paginador","offset","actual","limite","paginaAnterior","setState","paginaSiguiente","render","loading","error","data","startPolling","stopPolling","message","console","log","obtenerProductos","map","item","id","nombre","precio","stock","eliminarProducto","setTimeout","variables","totalClientes"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { Query, Mutation } from \"react-apollo\";\r\nimport {OBTENER_PRODUCTOS} from \"../../queries\";\r\nimport {ELIMINAR_PRODUCTO} from \"../../mutations\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Exito from '../Alertas/Exito';\r\nimport Paginador from '../Paginador';\r\nclass Productos extends Component {\r\n    state = { \r\n        alerta: {\r\n            mostrar: false,\r\n            mensaje: ''\r\n        },\r\n        paginador: {\r\n            offset: 0,\r\n            actual: 1,\r\n            limite: 2\r\n        }\r\n     }\r\n     paginaAnterior = () =>{\r\n        this.setState({\r\n            paginador: {\r\n            ...this.state.paginador,\r\n            offset: this.state.paginador.offset - this.state.paginador.limite,\r\n            actual: this.state.paginador.actual - 1,\r\n            }\r\n        })\r\n    }\r\n\r\n    paginaSiguiente = () => {\r\n        this.setState({\r\n            paginador: {\r\n            ...this.state.paginador,\r\n            offset: this.state.paginador.offset + this.state.paginador.limite,\r\n            actual: this.state.paginador.actual + 1\r\n            }\r\n        })\r\n    }\r\n    render() { \r\n        const {alerta: {mostrar, mensaje}} = this.state;\r\n        const alerta = (mostrar) ? <Exito mensaje={mensaje}/> :'';\r\n        return ( \r\n            <Fragment>\r\n                <h1>Productos</h1>\r\n                {alerta}\r\n            <Query query={OBTENER_PRODUCTOS} pollInterval={1000} variables={{limite: this.state.paginador.limite, offset: this.state.paginador.offset}}>\r\n     {({loading, error, data, startPolling, stopPolling}) =>{\r\n         if(loading) return \"Cargando...\";\r\n         if(error) return `Error: ${error.message}`;\r\n        console.log(data);\r\n         return(  \r\n            <Fragment>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr className=\"table-primary\">\r\n                            <th scope=\"col\">Nombre</th>\r\n                            <th scope=\"col\">Precio</th>\r\n                            <th scope=\"col\">Stock</th>\r\n                            <th scope=\"col\">Eliminar</th>\r\n                            <th scope=\"col\">Editar</th>\r\n                        </tr>\r\n                    </thead>\r\n                \r\n                <tbody>\r\n                  {data.obtenerProductos.map(item =>{\r\n                    const {id} = item;\r\n                    return(\r\n                    <tr key={id}>\r\n                        <td>{item.nombre}</td>\r\n                        <td>{item.precio}</td>\r\n                        <td>{item.stock}</td>\r\n                        <td>\r\n                            <Mutation \r\n                            mutation={ELIMINAR_PRODUCTO}\r\n                            onCompleted={(data)=>{\r\n                                this.setState({\r\n                                    alerta: {\r\n                                        mostrar: true,\r\n                                        mensaje: data.eliminarProducto\r\n                                    }\r\n                                }, ()=>{\r\n                                    setTimeout(() => {\r\n                                       this.setState({\r\n                                           alerta:{\r\n                                               mostrar: false,\r\n                                               mensaje: ''\r\n                                           }\r\n                                       }) \r\n                                    }, 3000);\r\n                                })\r\n                            }}\r\n                            >\r\n                            {eliminarProducto =>(\r\n                               <button \r\n                               onClick = {() =>{\r\n                                eliminarProducto({\r\n                                    variables: {id}\r\n                                })    \r\n                               }}\r\n                               type=\"button\"\r\n                               className=\"btn btn-danger\">\r\n                                &times; Eliminar   \r\n                               </button>     \r\n                            )}\r\n                            </Mutation>\r\n                            \r\n                        </td>\r\n                        <td>\r\n                            <Link to={`/productos/editar/${id}`}\r\n                                  className=\"btn btn-success\"  >\r\n                                Editar Producto\r\n                            </Link>\r\n                        </td>\r\n                    </tr>    \r\n                    )\r\n                  })}  \r\n                </tbody>\r\n                </table>\r\n                <Paginador \r\n                actual = {this.state.paginador.actual}\r\n                totalClientes = {data.totalClientes}\r\n                limite = {this.state.paginador.limite}\r\n                paginaAnterior = {this.paginaAnterior}\r\n                paginaSiguiente = {this.paginaSiguiente}\r\n             />\r\n             </Fragment> \r\n                )\r\n         }}\r\n            </Query>\r\n            </Fragment>  \r\n                     \r\n         ) \r\n    }\r\n}\r\n \r\nexport default Productos;"]},"metadata":{},"sourceType":"module"}