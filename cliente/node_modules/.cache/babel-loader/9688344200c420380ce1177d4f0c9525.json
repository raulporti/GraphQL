{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Raul\\\\Desktop\\\\GraphQL\\\\cliente\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //Importar componentes\n\nimport Header from './componentes/Layout/header';\nimport Clientes from './componentes/Clientes/Clientes';\nimport EditarCliente from './componentes/Clientes/EditarCliente';\nimport NuevoCliente from './componentes/Clientes/NuevoCliente';\nimport NuevoProducto from './componentes/Productos/NuevoProducto';\nimport Productos from './componentes/Productos/Productos';\nimport EditarProducto from './componentes/Productos/EditarProducto';\nimport NuevoPedido from './componentes/Pedidos/NuevoPedido';\nimport PedidosCliente from './componentes/Pedidos/PedidosCliente';\nimport Panel from './componentes/Panel/Panel';\nimport Registro from './componentes/Auth/Registro';\nimport Login from './componentes/Auth/Login';\nimport Session from './componentes/Sesion';\nconst client = new ApolloClient({\n  uri: \"http://localhost:8000/graphql\",\n  //Enviar token al servidor\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: operation => {\n    const token = localStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  cache: new InMemoryCache({\n    addTypename: false\n  }),\n  onError: ({\n    networkError,\n    graphQLErrors\n  }) => {\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  }\n});\n\nclass App extends Component {\n  render() {\n    return React.createElement(ApolloProvider, {\n      client: client,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/clientes\",\n      component: Clientes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/clientes/editar/:id\",\n      component: EditarCliente,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/clientes/nuevo\",\n      component: NuevoCliente,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/productos/nuevo\",\n      component: NuevoProducto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/productos\",\n      component: Productos,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/productos/editar/:id\",\n      component: EditarProducto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/pedidos/nuevo/:id\",\n      component: NuevoPedido,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/pedidos/:id\",\n      component: PedidosCliente,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/registro\",\n      component: Registro,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/panel\",\n      component: Panel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))))));\n  }\n\n} //export default App;\n\n\nconst RootSession = Session(App);\nexport { RootSession };","map":{"version":3,"sources":["D:/Users/Raul/Desktop/GraphQL/cliente/src/App.js"],"names":["React","Component","Fragment","ApolloProvider","ApolloClient","InMemoryCache","BrowserRouter","Router","Route","Switch","Header","Clientes","EditarCliente","NuevoCliente","NuevoProducto","Productos","EditarProducto","NuevoPedido","PedidosCliente","Panel","Registro","Login","Session","client","uri","fetchOptions","credentials","request","operation","token","localStorage","getItem","setContext","headers","authorization","cache","addTypename","onError","networkError","graphQLErrors","console","log","App","render","RootSession"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n//Importar componentes\r\nimport Header from './componentes/Layout/header';\r\nimport Clientes from './componentes/Clientes/Clientes';\r\nimport EditarCliente from './componentes/Clientes/EditarCliente';\r\nimport NuevoCliente from './componentes/Clientes/NuevoCliente';\r\nimport NuevoProducto from './componentes/Productos/NuevoProducto';\r\nimport Productos from './componentes/Productos/Productos';\r\nimport EditarProducto from './componentes/Productos/EditarProducto';\r\nimport NuevoPedido from './componentes/Pedidos/NuevoPedido';\r\nimport PedidosCliente from './componentes/Pedidos/PedidosCliente';\r\nimport Panel from './componentes/Panel/Panel';\r\nimport Registro  from './componentes/Auth/Registro';\r\nimport Login from './componentes/Auth/Login';\r\nimport Session from './componentes/Sesion';\r\nconst client = new ApolloClient({\r\n uri: \"http://localhost:8000/graphql\", \r\n //Enviar token al servidor\r\n fetchOptions : {\r\n   credentials: 'include'\r\n },\r\n request: operation =>{\r\n   const token = localStorage.getItem('token');\r\n   operation.setContext({\r\n     headers: {\r\n      authorization: token  \r\n     }\r\n   })\r\n },\r\n cache: new InMemoryCache({\r\n  addTypename: false\r\n }),\r\n onError: ({networkError, graphQLErrors})=> {\r\n   console.log('graphQLErrors', graphQLErrors);\r\n   console.log('networkError', networkError);\r\n }\r\n});\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <Fragment>\r\n        <Header/>\r\n     <div className=\"container\"> \r\n       <Switch>\r\n            \r\n            <Route exact path=\"/clientes\" component={Clientes}/>\r\n            <Route exact path=\"/clientes/editar/:id\" component={EditarCliente}/>\r\n\r\n            <Route exact path=\"/clientes/nuevo\" component={NuevoCliente}/>\r\n            <Route exact path=\"/productos/nuevo\" component={NuevoProducto}/>\r\n            <Route exact path=\"/productos\" component={Productos}/>  \r\n            <Route exact path=\"/productos/editar/:id\" component={EditarProducto}/>  \r\n            <Route exact path=\"/pedidos/nuevo/:id\" component={NuevoPedido}/>  \r\n            <Route exact path=\"/pedidos/:id\" component={PedidosCliente}/>  \r\n            <Route exact path=\"/registro\" component={Registro}/> \r\n            <Route exact path=\"/login\" component={Login}/> \r\n\r\n            <Route exact path=\"/panel\" component={Panel}/>  \r\n\r\n            \r\n       </Switch>\r\n      </div>\r\n        </Fragment>\r\n     \r\n      </Router>\r\n    </ApolloProvider>\r\n    );\r\n  }\r\n}\r\n\r\n//export default App;\r\n\r\nconst RootSession = Session(App);\r\nexport {RootSession}"]},"metadata":{},"sourceType":"module"}