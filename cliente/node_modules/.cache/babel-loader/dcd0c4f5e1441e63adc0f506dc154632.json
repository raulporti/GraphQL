{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\GraphQL\\\\cliente\\\\src\\\\componentes\\\\Pedidos\\\\Pedido.js\";\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport { OBTENER_PRODUCTO } from '../../queries';\nimport ResumenProducto from './ResumenProducto';\nimport { ACTUALIZAR_ESTADO } from '../../mutations';\nimport '../../Pedidos.css';\n\nconst Pedido = props => {\n  const {\n    pedido\n  } = props;\n  const fecha = new Date(Number(pedido.fecha));\n  const {\n    id,\n    total\n  } = pedido;\n  const {\n    estado\n  } = pedido;\n  let clase;\n\n  if (estado === 'PENDIENTE') {\n    clase = 'border-light';\n  } else if (estado === 'CANCELADO') {\n    clase = 'border-danger';\n  } else {\n    clase = 'border-success';\n  }\n\n  return React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: `card mb-3 ${clase}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"card-text font-weight-bold \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Estado:\", React.createElement(Mutation, {\n    mutation: ACTUALIZAR_ESTADO,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, actualizarEstado => React.createElement(\"select\", {\n    className: \"form-control my-3\",\n    value: pedido.estado,\n    onChange: e => {\n      const input = {\n        id,\n        pedido: pedido.pedido,\n        fecha: pedido.fecha,\n        total,\n        cliente: props.cliente,\n        estado: e.target.value\n      };\n      actualizarEstado({\n        variables: {\n          input\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"PENDIENTE\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"PENDIENTE\"), React.createElement(\"option\", {\n    value: \"COMPLETADO\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"COMPLETADO\"), React.createElement(\"option\", {\n    value: \"CANCELADO\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"CANCELADO\")))), React.createElement(\"p\", {\n    className: \"card-text font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Pedido ID:\\xA0\", React.createElement(\"span\", {\n    className: \"font-weight-normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \" \", pedido.id)), React.createElement(\"p\", {\n    className: \"card-text font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Fecha Pedido:\\xA0\", React.createElement(\"span\", {\n    className: \"font-weight-normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, fecha.toLocaleString(\"es-GT\"))), React.createElement(\"h3\", {\n    className: \"card-text text-center mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Art\\xEDculos del pedido\"), pedido.pedido.map((producto, index) => {\n    const {\n      id\n    } = producto;\n    return React.createElement(Query, {\n      key: pedido.id + index,\n      query: OBTENER_PRODUCTO,\n      variables: {\n        id\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, ({\n      loading,\n      error,\n      data,\n      refetch\n    }) => {\n      if (loading) return \"Cargando...\";\n      if (error) return `Error ${error.message}`;\n      return React.createElement(ResumenProducto, {\n        producto: data.obtenerProducto,\n        cantidad: producto.cantidad,\n        id: producto.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    });\n  }), React.createElement(\"p\", {\n    className: \"card-text font-weight-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Total:\\xA0\", React.createElement(\"p\", {\n    className: \"font-weight-normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"$\", pedido.total)))));\n};\n\nexport default Pedido;","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/GraphQL/cliente/src/componentes/Pedidos/Pedido.js"],"names":["React","Query","Mutation","OBTENER_PRODUCTO","ResumenProducto","ACTUALIZAR_ESTADO","Pedido","props","pedido","fecha","Date","Number","id","total","estado","clase","actualizarEstado","e","input","cliente","target","value","variables","toLocaleString","map","producto","index","loading","error","data","refetch","message","obtenerProducto","cantidad"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Query, Mutation} from 'react-apollo';\r\nimport {OBTENER_PRODUCTO} from '../../queries';\r\nimport ResumenProducto from './ResumenProducto';\r\nimport {ACTUALIZAR_ESTADO} from '../../mutations';\r\nimport '../../Pedidos.css';\r\nconst Pedido = (props) => {\r\n    const {pedido} = props;\r\n    const fecha = new Date(Number(pedido.fecha));\r\n    const {id, total} = pedido;\r\n    const{estado} = pedido;\r\n    let clase;\r\n    if(estado==='PENDIENTE'){\r\n        clase = 'border-light';\r\n    }else if(estado==='CANCELADO'){\r\n        clase = 'border-danger';\r\n    }else {\r\n        clase = 'border-success';\r\n    }\r\n    return ( \r\n        <div className=\"col-md-4\">\r\n            <div className={`card mb-3 ${clase}`}>\r\n                <div className=\"card-body\">\r\n                    <p className=\"card-text font-weight-bold \">Estado:\r\n                            <Mutation mutation={ACTUALIZAR_ESTADO}>\r\n                                {actualizarEstado =>(\r\n                                <select className=\"form-control my-3\"\r\n                                        value={pedido.estado}\r\n                                        onChange={e =>{\r\n                                            const input = {\r\n                                                id,\r\n                                                pedido: pedido.pedido,\r\n                                                fecha: pedido.fecha,\r\n                                                total, \r\n                                                cliente: props.cliente,\r\n                                                estado: e.target.value\r\n                                            }\r\n                                            actualizarEstado({\r\n                                                variables: {input}\r\n                                            })\r\n                                        }}>\r\n                                        <option value=\"PENDIENTE\">PENDIENTE</option>\r\n                                        <option value=\"COMPLETADO\">COMPLETADO</option>\r\n                                        <option value=\"CANCELADO\">CANCELADO</option>\r\n                                </select>\r\n                                )}\r\n                            </Mutation>\r\n                            \r\n                    </p> \r\n                    <p className=\"card-text font-weight-bold\">Pedido ID:&nbsp;\r\n                        <span className=\"font-weight-normal\"> {pedido.id}</span>\r\n                    </p> \r\n                    <p className=\"card-text font-weight-bold\">Fecha Pedido:&nbsp;  \r\n                        <span className=\"font-weight-normal\">\r\n                            {fecha.toLocaleString(\"es-GT\")}\r\n                        </span>\r\n                    </p>\r\n                                       \r\n                    <h3 className=\"card-text text-center mb-3\">Artículos del pedido</h3>\r\n                    {pedido.pedido.map((producto, index) =>{\r\n                        const {id} = producto;\r\n                        return(\r\n                            <Query key={pedido.id+index} query={OBTENER_PRODUCTO} \r\n                        variables={{id}}>\r\n                     {({loading, error, data, refetch}) =>{\r\n                         if(loading) return \"Cargando...\";\r\n                         if(error) return `Error ${error.message}`;\r\n                        return(  \r\n                              <ResumenProducto   \r\n                             producto={data.obtenerProducto} \r\n                             cantidad={producto.cantidad}\r\n                             id={producto.id}     \r\n                             />\r\n                                 \r\n                         )\r\n                     }}       \r\n                </Query>\r\n                        );\r\n                    })}\r\n                    <p className=\"card-text font-weight-bold\">Total:&nbsp;  \r\n                         <p className=\"font-weight-normal\"> \r\n                                ${pedido.total}\r\n                        </p>\r\n                    </p> \r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Pedido;\r\n"]},"metadata":{},"sourceType":"module"}