{"ast":null,"code":"var _jsxFileName = \"D:\\\\Users\\\\Raul\\\\Desktop\\\\GraphQL\\\\cliente\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; //Importar componentes\n\nimport Header from './componentes/Layout/header';\nimport Clientes from './componentes/Clientes/Clientes';\nimport EditarCliente from './componentes/Clientes/EditarCliente';\nimport NuevoCliente from './componentes/Clientes/NuevoCliente';\nimport NuevoProducto from './componentes/Productos/NuevoProducto';\nimport Productos from './componentes/Productos/Productos';\nimport EditarProducto from './componentes/Productos/EditarProducto';\nimport NuevoPedido from './componentes/Pedidos/NuevoPedido';\nimport PedidosCliente from './componentes/Pedidos/PedidosCliente';\nimport Panel from './componentes/Panel/Panel';\nimport Registro from './componentes/Auth/Registro';\nimport Login from './componentes/Auth/Login';\nimport Session from './componentes/Sesion';\nconst client = new ApolloClient({\n  uri: \"http://localhost:8000/graphql\",\n  //Enviar token al servidor\n  fetchOptions: {\n    credentials: 'include'\n  },\n  request: operation => {\n    const token = localStorage.getItem('token');\n    operation.setContext({\n      headers: {\n        authorization: token\n      }\n    });\n  },\n  cache: new InMemoryCache({\n    addTypename: false\n  }),\n  onError: ({\n    networkError,\n    graphQLErrors\n  }) => {\n    console.log('graphQLErrors', graphQLErrors);\n    console.log('networkError', networkError);\n  }\n});\n\nconst App = ({\n  refetch,\n  session\n}) => {\n  React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/clientes\",\n    component: Clientes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/clientes/editar/:id\",\n    component: EditarCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/clientes/nuevo\",\n    component: NuevoCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/productos/nuevo\",\n    component: NuevoProducto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/productos\",\n    component: Productos,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/productos/editar/:id\",\n    component: EditarProducto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/pedidos/nuevo/:id\",\n    component: NuevoPedido,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/pedidos/:id\",\n    component: PedidosCliente,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/registro\",\n    component: Registro,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/panel\",\n    component: Panel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }))))));\n}; //export default App;\n\n\nconst RootSession = Session(App);\nexport { RootSession };","map":{"version":3,"sources":["D:/Users/Raul/Desktop/GraphQL/cliente/src/App.js"],"names":["React","Component","Fragment","ApolloProvider","ApolloClient","InMemoryCache","BrowserRouter","Router","Route","Switch","Header","Clientes","EditarCliente","NuevoCliente","NuevoProducto","Productos","EditarProducto","NuevoPedido","PedidosCliente","Panel","Registro","Login","Session","client","uri","fetchOptions","credentials","request","operation","token","localStorage","getItem","setContext","headers","authorization","cache","addTypename","onError","networkError","graphQLErrors","console","log","App","refetch","session","RootSession"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {ApolloProvider} from 'react-apollo';\r\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\n//Importar componentes\r\nimport Header from './componentes/Layout/header';\r\nimport Clientes from './componentes/Clientes/Clientes';\r\nimport EditarCliente from './componentes/Clientes/EditarCliente';\r\nimport NuevoCliente from './componentes/Clientes/NuevoCliente';\r\nimport NuevoProducto from './componentes/Productos/NuevoProducto';\r\nimport Productos from './componentes/Productos/Productos';\r\nimport EditarProducto from './componentes/Productos/EditarProducto';\r\nimport NuevoPedido from './componentes/Pedidos/NuevoPedido';\r\nimport PedidosCliente from './componentes/Pedidos/PedidosCliente';\r\nimport Panel from './componentes/Panel/Panel';\r\nimport Registro  from './componentes/Auth/Registro';\r\nimport Login from './componentes/Auth/Login';\r\nimport Session from './componentes/Sesion';\r\nconst client = new ApolloClient({\r\n uri: \"http://localhost:8000/graphql\", \r\n //Enviar token al servidor\r\n fetchOptions : {\r\n   credentials: 'include'\r\n },\r\n request: operation =>{\r\n   const token = localStorage.getItem('token');\r\n   operation.setContext({\r\n     headers: {\r\n      authorization: token  \r\n     }\r\n   })\r\n },\r\n cache: new InMemoryCache({\r\n  addTypename: false\r\n }),\r\n onError: ({networkError, graphQLErrors})=> {\r\n   console.log('graphQLErrors', graphQLErrors);\r\n   console.log('networkError', networkError);\r\n }\r\n});\r\n\r\n  const App = ({refetch, session}) => {\r\n\r\n  \r\n    <ApolloProvider client={client}>\r\n      <Router>\r\n        <Fragment>\r\n        <Header/>\r\n     <div className=\"container\"> \r\n       <Switch>\r\n            \r\n            <Route exact path=\"/clientes\" component={Clientes}/>\r\n            <Route exact path=\"/clientes/editar/:id\" component={EditarCliente}/>\r\n\r\n            <Route exact path=\"/clientes/nuevo\" component={NuevoCliente}/>\r\n            <Route exact path=\"/productos/nuevo\" component={NuevoProducto}/>\r\n            <Route exact path=\"/productos\" component={Productos}/>  \r\n            <Route exact path=\"/productos/editar/:id\" component={EditarProducto}/>  \r\n            <Route exact path=\"/pedidos/nuevo/:id\" component={NuevoPedido}/>  \r\n            <Route exact path=\"/pedidos/:id\" component={PedidosCliente}/>  \r\n            <Route exact path=\"/registro\" component={Registro}/> \r\n            <Route exact path=\"/login\" component={Login}/> \r\n\r\n            <Route exact path=\"/panel\" component={Panel}/>  \r\n\r\n            \r\n       </Switch>\r\n      </div>\r\n        </Fragment>\r\n     \r\n      </Router>\r\n    </ApolloProvider>\r\n    }\r\n//export default App;\r\n\r\nconst RootSession = Session(App);\r\nexport {RootSession}"]},"metadata":{},"sourceType":"module"}